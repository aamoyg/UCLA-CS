HIF003
--
-- Copyright (C) 1988-2003 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	halfadd.gdf
	{
		halfadd [] []
		{
			3 [] [];
		}
	}
	fulladd.gdf
	{
		fulladd [] []
		{
			2 [] [];
		}
	}
	mh.gdf
	{
		mh [] []
		{
			4 [] [];
		}
	}
	mf.gdf
	{
		mf [] []
		{
			1 [] [];
		}
	}
	pm.gdf
	{
		pm [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	pm::(0,0):(0): pm.gdf
	{
		mh::(0,0):(12): mh.gdf
		{
			halfadd:3:(0,0):(1): halfadd.gdf;
		}
		mh::(0,0):(11): mh.gdf
		{
			halfadd:3:(0,0):(1): halfadd.gdf;
		}
		mh::(0,0):(33): mh.gdf
		{
			halfadd:3:(0,0):(1): halfadd.gdf;
		}
		mh::(0,0):(10): mh.gdf
		{
			halfadd:3:(0,0):(1): halfadd.gdf;
		}
		mf::(0,0):(3): mf.gdf
		{
			fulladd:2:(0,0):(2): fulladd.gdf
			{
				halfadd:3:(0,0):(1): halfadd.gdf;
				halfadd:3:(0,0):(2): halfadd.gdf;
			}
		}
		mf::(0,0):(2): mf.gdf
		{
			fulladd:2:(0,0):(2): fulladd.gdf
			{
				halfadd:3:(0,0):(1): halfadd.gdf;
				halfadd:3:(0,0):(2): halfadd.gdf;
			}
		}
		mf::(0,0):(4): mf.gdf
		{
			fulladd:2:(0,0):(2): fulladd.gdf
			{
				halfadd:3:(0,0):(1): halfadd.gdf;
				halfadd:3:(0,0):(2): halfadd.gdf;
			}
		}
		mf::(0,0):(5): mf.gdf
		{
			fulladd:2:(0,0):(2): fulladd.gdf
			{
				halfadd:3:(0,0):(1): halfadd.gdf;
				halfadd:3:(0,0):(2): halfadd.gdf;
			}
		}
		mf::(0,0):(6): mf.gdf
		{
			fulladd:2:(0,0):(2): fulladd.gdf
			{
				halfadd:3:(0,0):(1): halfadd.gdf;
				halfadd:3:(0,0):(2): halfadd.gdf;
			}
		}
		mf::(0,0):(7): mf.gdf
		{
			fulladd:2:(0,0):(2): fulladd.gdf
			{
				halfadd:3:(0,0):(1): halfadd.gdf;
				halfadd:3:(0,0):(2): halfadd.gdf;
			}
		}
		mf::(0,0):(8): mf.gdf
		{
			fulladd:2:(0,0):(2): fulladd.gdf
			{
				halfadd:3:(0,0):(1): halfadd.gdf;
				halfadd:3:(0,0):(2): halfadd.gdf;
			}
		}
		mf::(0,0):(9): mf.gdf
		{
			fulladd:2:(0,0):(2): fulladd.gdf
			{
				halfadd:3:(0,0):(1): halfadd.gdf;
				halfadd:3:(0,0):(2): halfadd.gdf;
			}
		}
	}
}
